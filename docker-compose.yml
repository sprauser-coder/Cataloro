services:
  mongodb:
    image: mongo:5.0
    container_name: cataloro_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - cataloro_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cataloro_backend
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      - MONGO_URL=${MONGO_URL}
      - JWT_SECRET=${JWT_SECRET}
      - BACKEND_URL=${BACKEND_URL}
      - ENVIRONMENT=production
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    networks:
      - cataloro_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
    container_name: cataloro_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - cataloro_network

  nginx:
    image: nginx:alpine
    container_name: cataloro_nginx
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt/live/cataloro.com/fullchain.pem:/etc/ssl/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/cataloro.com/privkey.pem:/etc/ssl/private/privkey.pem:ro
    networks:
      - cataloro_network

volumes:
  mongodb_data:
  backend_uploads:

networks:
  cataloro_network:
    driver: bridge
